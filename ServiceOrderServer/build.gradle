//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
apply plugin: 'java'
apply plugin: 'com.bmuschko.cargo'
apply plugin: 'base'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.bmuschko.tomcat'

buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2'
    }
}

dependencies {

    def tomcatVersion = '7.0.59'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}",
           "org.apache.tomcat:tomcat-dbcp:${tomcatVersion}",
           "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}",
           "org.apache.tomcat:tomcat-jdbc:${tomcatVersion}",
           "org.apache.tomcat:tomcat-catalina:${tomcatVersion}"
    // JAX-RS 2.0(.1)
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    
    compile 'com.fasterxml:jackson-module-json-org:0.9.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.0.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'

    // Jersey 2.15
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.15'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2'
    compile 'org.glassfish.jersey.core:jersey-common:2.22.2'
    compile 'org.glassfish.jersey.core:jersey-server:2.22.2'
    compile 'org.glassfish.jersey.core:jersey-client:2.22.2'
    compile 'org.glassfish.jersey.bundles:jaxrs-ri:2.22.2'
    
    compile 'org.mongodb:mongo-java-driver:3.2.2'

 
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    
    
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    
    compile 'com.sun.faces:jsf-api:2.2.13'
    
    compile 'com.sun.faces:jsf-impl:2.2.13'
    
    compile project(':User')
    compile project(':Person')
    testCompile project (':User')
    testCompile project (':Person')

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0',
                'javax.servlet:jsp-api:2.0'
    
    
}

tomcat {
    httpPort  = 8084
    stopPort  = 8184
    enableSSL = false

    users {
        user {
            username = 'tomcat'
            password = 'tomcat'
            roles = ['developers', 'admin']
        }

        user {
            username = 'admin'
            password = 'admin'
            roles = ['manager']
        }
    }
}

tomcatRun {
    configFile = file("context.xml")
    webDefaultXml = file("src/main/webapp/WEB-INF/tomcat/web-tomcat.xml")
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'WebServiceOrder.java'
}

task run(type : GradleBuild){
    tasks = ['deploy']
    //tasks = ['tomcatStop','tomcatRun']
}

task debug(type : GradleBuild){
    tasks = ['deploy']
    //tasks = ['tomcatStop','tomcatRun']
}

